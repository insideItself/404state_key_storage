version: '3.1'

name: 404state_key_storage
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile.flask_app
    restart: always
    depends_on:
      - database
    env_file:
      - ./.env
    environment:
      - DOCKER_CONTAINER=1 # set variable DOCKER_CONTAINER to use it in config.py file for some if-else conditions
    ports:
      - "${FLASK_APP_PORT}"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.local.conf:/etc/nginx/nginx.conf:ro
      - ${LOCAL_SSL_CERTIFICATES_PATH}:/etc/nginx/certs
    depends_on:
      - app
    ports:
      - "${NGINX_HOST_HTTP_PORT}:${NGINX_CONTAINER_HTTP_PORT}"
      - "${NGINX_HOST_HTTPS_PORT}:${NGINX_CONTAINER_HTTPS_PORT}"

  database:
    image: postgres
    restart: always
    user: ${POSTGRES_USERNAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - ${DATABASE_STORAGE_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  tests:
    build:
      context: .
      dockerfile: Dockerfile.unit_tests  # Your test Dockerfile
    depends_on:
      - database
    env_file:
      - ./.env
    environment:
      - DOCKER_CONTAINER=1
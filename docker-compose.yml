version: '3.1'

name: 404state_key_storage
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile.flask_app
    restart: always
    depends_on:
      - database
    env_file:
      - ./.env
    environment:
      - DOCKER_CONTAINER=1 # set variable DOCKER_CONTAINER to use it in config.py file for some if-else conditions
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - FORCE_SSL=true
    ports:
      - "${FLASK_APP_PORT}"

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "${NGINX_HOST_HTTP_PORT}:${NGINX_CONTAINER_HTTP_PORT}"
      - "${NGINX_HOST_HTTPS_PORT}:${NGINX_CONTAINER_HTTPS_PORT}"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
    environment:
      - DEFAULT_HOST=${VIRTUAL_HOST}
    labels:
      - "com.github.nginx-proxy.nginx=true"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam

  database:
    image: postgres
    restart: always
    user: ${POSTGRES_USERNAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - ${DATABASE_STORAGE_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  tests:
    build:
      context: .
      dockerfile: Dockerfile.unit_tests
    depends_on:
      - database
    env_file:
      - ./.env
    environment:
      - DOCKER_CONTAINER=1

volumes:
    vhost:
    html:
    dhparam: